---
title: "Test"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
Load data and library
```{r}
library(dplyr)
library(prettyR)
setwd("C:/Users/Matthew.Hanauer/Google Drive/Diss/Results/tceps/original")
#setwd("/Volumes/GoogleDrive/My Drive/Diss/Results/tceps")
tceps_demos = read.csv("MKEPSPsychoPreInform_DATA_2020-11-23_0619.csv", header = TRUE)
n_total = dim(tceps_demos)[1]
```
Data cleaning for pre descriptives to evaluate missingness
```{r}
tceps_demos_clean = tceps_demos %>%
  filter(consent_signed == 1) %>%
  filter(mkeps_pre_complete == 2) %>%
  dplyr::select(record_id, age, race, gender, edu, program_evaluation_exp, matt_time_spent, time_at_cri, att_1, att_2, att_3, att_4) %>%
  rowwise() %>%
    mutate(att_total = sum(c_across(c(att_1:att_4)))) %>%
  select(-c(att_1:att_4)) %>%
  #Change race to 1 versus all others
  mutate(race_white = if_else(race == 1, "White", "Non-white"),
         gender_female = if_else(gender == 2, "Female", "Non-female"),
         program_eval_2_or_less = if_else(program_evaluation_exp <= 4, "<= 2 years", "> 2 years"), 
         matt_time_spent_none = if_else(matt_time_spent == 1, "None","> None"),
        time_at_cri_2_or_less = if_else(time_at_cri <= 4, "<= 2 years", "> 2 years")) %>%
  mutate_at(.vars = c("race", "gender", "edu", "program_evaluation_exp", "matt_time_spent", "time_at_cri"), .funs = as.factor) %>%
  #Edu = 4, Bachelor's degree | 5, Master's degree  7, Doctoral degree (e.g. PhD)
  select(-c(race, gender, program_evaluation_exp, matt_time_spent, time_at_cri)) %>%
  mutate(edu = case_when(edu == "4"~ "Bachelors", 
          edu == "5" ~ "Masters",
          edu == "7" ~  "Doctoral degree (e.g. PhD)")) %>%
  filter(record_id != 59) %>%
  filter(record_id != 104)
tceps_demos_clean
n_consent = dim(tceps_demos_clean)[1]
```

Load in re-rated and create a total score
```{r}
setwd("C:/Users/Matthew.Hanauer/Google Drive/Diss/Results/tceps/rating/pre/re_rated")
re_score_tceps_pre_mkeps_elaina = read.csv("re_score_tceps_pre_mkeps_sara.csv", header = TRUE)
re_score_tceps_pre_mkeps_sara = read.csv("re_score_tceps_pre_mkeps_sara.csv", header = TRUE)

re_score_sara_tceps_mkeps_pre_score =  re_score_sara_tceps_mkeps_pre %>%
  select(c(record_id, mkeps_1_score, mkeps_2_score, mkeps_3_score, mkeps_4_score, mkeps_5_score, mkeps_6_score, mkeps_7_score, mkeps_8_score, mkeps_9_score, mkeps_10_score, mkeps_11_score, mkeps_12_score, mkeps_13_score, mkeps_14_score, mkeps_15_score))
re_score_sara_tceps_mkeps_pre_score

re_score_elaina_tceps_mkeps_pre_score =  re_score_elaina_tceps_mkeps_pre %>%
  select(c(record_id, mkeps_1_score, mkeps_2_score, mkeps_3_score, mkeps_4_score, mkeps_5_score, mkeps_6_score, mkeps_7_score, mkeps_8_score, mkeps_9_score, mkeps_10_score, mkeps_11_score, mkeps_12_score, mkeps_13_score, mkeps_14_score, mkeps_15_score))
re_score_elaina_tceps_mkeps_pre_score

pre_tceps_mkeps  = re_score_sara_tceps_mkeps_pre_score[,2:16] + re_score_elaina_tceps_mkeps_pre_score[,2:16] 
pre_tceps_mkeps$record_id = re_score_sara_tceps_mkeps_pre_score$record_id
pre_tceps_mkeps$pre_tcep_mkeps_total = apply(re_score_sara_tceps_mkeps_pre_score[,2:16], 1, sum)
### Select only the total score and id
pre_tceps_mkeps = pre_tceps_mkeps %>%
  select(record_id, pre_tcep_mkeps_total)
pre_tceps_mkeps
```

Now link the two for testing for missingness
Need to link with post TCEPS scores as well
Need to keep all the original consented folks and what we can from the pre and post testing
```{r}
tceps_demos_pre = merge(tceps_demos_clean, pre_tceps_mkeps, by = "record_id")
n_complete_pre =  dim(tceps_demos_pre)[1]
dim(tceps_demos_pre)
```
Number of people who completed the post testing 
```{r}
library(MissMech)
TestMCARNormality(tceps_demos_pre[-c(1)])
```
Missing data test
```{r}

```




N's for flow
```{r}
n_total
n_consent
n_complete_pre

n_tceps_results = data.frame(n_total, n_consent, n_complete_pre)
```
Data cleaning for post descriptives
```{r}
tceps_demos_clean = tceps_demos %>%
  filter(consent_signed == 1) %>%
  filter(mkeps_pre_complete == 2) %>%
  dplyr::select(record_id, age, race, gender, edu, program_evaluation_exp, matt_time_spent, time_at_cri, att_1, att_2, att_3, att_4) %>%
  rowwise() %>%
    mutate(att_total = sum(c_across(c(att_1:att_4)))) %>%
  select(-c(att_1:att_4)) %>%
  #Change race to 1 versus all others
  mutate(race_white = if_else(race == 1, "White", "Non-white"),
         gender_female = if_else(gender == 2, "Female", "Non-female"),
         program_eval_2_or_less = if_else(program_evaluation_exp <= 4, "<= 2 years", "> 2 years"), 
         matt_time_spent_none = if_else(matt_time_spent == 1, "None","> None"),
        time_at_cri_2_or_less = if_else(time_at_cri <= 4, "<= 2 years", "> 2 years")) %>%
  mutate_at(.vars = c("race", "gender", "edu", "program_evaluation_exp", "matt_time_spent", "time_at_cri"), .funs = as.factor) %>%
  #Edu = 4, Bachelor's degree | 5, Master's degree  7, Doctoral degree (e.g. PhD)
  select(-c(race, gender, program_evaluation_exp, matt_time_spent, time_at_cri)) %>%
  mutate(edu = case_when(edu == "4"~ "Bachelors", 
          edu == "5" ~ "Masters",
          edu == "7" ~  "Doctoral degree (e.g. PhD)"))
tceps_demos_clean
n_consent = dim(tceps_demos_clean)[1]
```


Participant characteristics
```{r}
library(tableone)
tab1 =  CreateTableOne(data = tceps_demos_clean[-c(1)])
tab1 = print(tab1, showAllLevels = TRUE)
tab1
write.csv(tab1, file = "tab1.csv")
```
###################################
TCEPS training results
##################################
```{r}
### Get responses for grading
setwd("C:/Users/Matthew.Hanauer/Google Drive/Diss/Results/tceps/rating/pre/original")
tceps_pre_mkeps = read.csv("MKEPSPsychoPre_DATA_2020-12-03_1223.csv", header = TRUE)
tceps_pre_mkeps

tceps_pre_mkeps_clean = tceps_pre_mkeps %>%
  filter(mkeps_pre_complete == 2) %>%
  select(c(record_id, mkeps_1:mkeps_15))
tceps_pre_mkeps_clean
write.csv(tceps_pre_mkeps_clean, "tceps_pre_mkeps_clean_12_3_20.csv", row.names = FALSE)
```
When figuring out the repeats, grab the record ID from the grades and then remove based on when they are different












