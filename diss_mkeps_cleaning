---
title: "Test"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
Load up AMT data
```{r}
#setwd("C:/Users/Matthew.Hanauer/Google Drive/Diss/Results/mkeps_pilot")
setwd("/Volumes/GoogleDrive/My Drive/Diss/Results/mkeps_pilot")
mkeps = read.csv("mkeps_10_31_20.csv", header = TRUE, na.strings = c("", " "))
head(mkeps)
library(lubridate)
mkeps =  mkeps[-c(1,2),] 
start_date = list()

for(i in 1:dim(mkeps)[1]){
 start_date[[i]] =  strsplit(mkeps$StartDate[[i]]," ")[[1]][1]
}

start_date = unlist(start_date)
start_date = ymd(start_date)
mkeps$StartDate = start_date
mkeps$StartDate

### Only include those from October and after, because that is when you started the study
mkeps = subset(mkeps, StartDate >= "2020-10-26")
dim(mkeps)
mkeps = mkeps[!is.na(mkeps$AMT_ID_5),]
### Create an ID 
mkeps$id = 1:dim(mkeps)[1]
```

Clean data for grading
```{r}
mkeps$Q_RelevantIDFraudScore = as.numeric(mkeps$Q_RelevantIDFraudScore)
mkeps_grade = mkeps
### Just subset their AMT ID and mkeps questions for merging later
mkeps_grade = mkeps_grade[,c(6, 32:46, 55, 56)]
## Get time to help you identify low quality repsonses
mkeps_grade$Duration..in.seconds. = as.numeric(mkeps_grade$Duration..in.seconds.)
mkeps_grade$minutes = mkeps_grade$Duration..in.seconds. / 60


mkeps_grade = subset(mkeps_grade, AMT_ID_check_4 != "A2HO2H720XV8HU" & AMT_ID_check_4 != "ACXP8KHFX06KR" & AMT_ID_check_4 != "AIX406KFA5O9J" & AMT_ID_check_4 != "A3JZYTT9UYV6U6" & AMT_ID_check_4 != "AMX69IKJUQ9EA" &  AMT_ID_check_4 != "A2F7DOEGHSENOY" &  AMT_ID_check_4 != "ALPH6Y4RS0G8C" &  AMT_ID_check_4 != "A2JET844BDM5YN" &  AMT_ID_check_4 != "A39CP46L3ODZHZ" &  AMT_ID_check_4 != "A2UJS8ELW3YUN9" &  AMT_ID_check_4 != "AH8EQV7IR97WE" &  AMT_ID_check_4 != "A5ZCUUP1MEKPJ" &  AMT_ID_check_4 != "A23C7BGEJEJOV8" & AMT_ID_check_4 != "A3LMF9D786PL8S" & AMT_ID_check_4 != "A3ANS61F3A656X" & AMT_ID_check_4 != "A1K8LPVDPWZSF9" & AMT_ID_check_4 != "AWHO5KT1KH28P" & AMT_ID_check_4 != "A2M6NAML0AGAJZ" & AMT_ID_check_4 != "A2OWM5OSE4SCFS" & AMT_ID_check_4 != "A39VB8OXHQZ6ZW" & AMT_ID_check_4 != "A1SGW0LMP12O59" &  AMT_ID_check_4 != "A3QN5EE1VSSJFS" & AMT_ID_check_4 != "A3OG21UO1AWTR7" & AMT_ID_check_4 != "A333RHGFT13OQM" & AMT_ID_check_4 != "A2RCT46ET5RNQN" & AMT_ID_check_4 != "A2ZLJQWCM8KU36" & AMT_ID_check_4 != "AE2U85I1TQ1E" & AMT_ID_check_4 != "A2TNZ157R0KWAC" & AMT_ID_check_4 != "COPIEDAXTUNPWPKSGPE" & AMT_ID_check_4 != "A1KXG3R48T74R3"  & AMT_ID_check_4 != "A2DIPD0N2YL9ST"  & AMT_ID_check_4 != "A36FVHZ2BEPYNM" & AMT_ID_check_4 != "AX6SVQJPPRLLJ" & AMT_ID_check_4 != "A28DMXUJCMX6SC" & AMT_ID_check_4 != "A3MNWO15YNEZNB" & AMT_ID_check_4 != "A82TD4PQWBMD1" & AMT_ID_check_4 != "A3RZAUWEE77S82" & AMT_ID_check_4 != "A3VGK3RB5D4NUM" & AMT_ID_check_4 != "A2QTJOFOT0709Q" & AMT_ID_check_4 != "A2F7DOEGHSENOY" & AMT_ID_check_4 != "A23C7BGEJEJOV8"  & AMT_ID_check_4 != "A6WKYH2T5ARRC" & AMT_ID_check_4 != "ACJFWPKW4JA59" & AMT_ID_check_4 != "A7NYDMF5BMLB7" & AMT_ID_check_4 != "A3JB1MBS7KFAGJ" & AMT_ID_check_4 != "A2M6NAML0AGAJZ" & AMT_ID_check_4 != "zgfdagdgdas" & AMT_ID_check_4 != "AAONZ5XA6MR5N" & AMT_ID_check_4 != "A3VRCG7T1S9D4J"  & AMT_ID_check_4 != "A2QTVSDHALU9GN" & AMT_ID_check_4 != "AJ5DO6BRNXQOA"  & AMT_ID_check_4 != "A3OUHE4W0AGUPE" & AMT_ID_check_4 != "A34IHD290HFEXY")

dim(mkeps_grade)
range(mkeps_grade$minutes)
mean(mkeps_grade$minutes)
mkeps_grade$Duration..in.seconds. = NULL
mkeps_grade$minutes = NULL
write.csv(mkeps_grade, "mkeps_grade.csv", row.names = FALSE)
dim(mkeps_grade)
```


Now just MKEPS for getting data for grading for first round
```{r}

mkeps_grade
mkeps_grade_all_10_30_20 = mkeps_grade
write.csv(mkeps_grade_all_10_30_20, "mkeps_grade_all_10_30_20.csv", row.names = FALSE)

mkeps_grade_matt_sara_10_30_20 = mkeps_grade[1:36,]
write.csv(mkeps_grade_matt_sara_10_30_20, "mkeps_grade_matt_sara_10_30_20.csv", row.names = FALSE)
mkeps_grade_matt_elaina_10_30_20 = mkeps_grade[37:73,]
write.csv(mkeps_grade_matt_elaina_10_30_20, "mkeps_grade_matt_elaina_10_30_20.csv", row.names = FALSE)
mkeps_grade_sara_elaina_10_30_20 = mkeps_grade[74:110,]
write.csv(mkeps_grade_sara_elaina_10_30_20, "mkeps_grade_sara_elaina_10_30_20.csv", row.names = FALSE)




```
Now get grading for second round
```{r}

mkeps_grade_matt_sara_11_29_20 = mkeps_grade
mkeps_grade_matt_sara_11_29_20 = mkeps_grade[111:120,]
write.csv(mkeps_grade_matt_sara_11_29_20, "mkeps_grade_matt_sara_11_29_20.csv", row.names = FALSE)
mkeps_grade_matt_elaina_11_29_20 = mkeps_grade[121:130,]
write.csv(mkeps_grade_matt_elaina_11_29_20, "mkeps_grade_matt_elaina_11_29_20.csv", row.names = FALSE)
mkeps_grade_sara_elaina_11_29_20 = mkeps_grade[131:140,]
write.csv(mkeps_grade_sara_elaina_11_29_20, "mkeps_grade_sara_elaina_11_29_20.csv", row.names = FALSE)

```
Get participant characteristics for study two 
```{r}
### subset for the first 140 and grab just the ids to match the original data with the cleaned
mkeps_grade_part = mkeps_grade %>%
  slice(1:140) %>%
  dplyr::select(id)

### Limit original MKEPS to just the variables you want
mkeps_part = mkeps %>%
 dplyr::select(Duration..in.seconds.,age, edu, race, gender, evaluation, research, id) %>%
  rename(minutes = Duration..in.seconds.) %>%
  mutate(minutes = as.numeric(minutes)) %>%
  mutate(minutes = minutes / 60) %>%
  mutate(minutes = if_else(minutes > 200, -9, minutes)) %>%
  mutate(minutes = na_if(minutes, -9)) %>%
  mutate(age = as.numeric(age)) %>%
  mutate(minutes = round(minutes)) %>%
  # Recode education and race to anything less than 5%
  mutate(race = case_when(
    race == "American Indian or Alaska Native" ~ "Another racial identity",
    race == "Asian" ~ "Another racial identity",
    race == "Multiracial" ~ "Another racial identity",
    race == "Prefer not to respond" ~ "Another racial identity",
    ### This says if not any of these options keep the current response
    TRUE ~ as.character(race))) %>%
  mutate(edu = case_when(
    edu == "Doctoral degree (e.g. PhD)" ~ "Master's or greater",
    edu == "Master's degree" ~ "Master's or greater",
    edu == "Professional degree (e.g. MD)"  ~ "Master's or greater",
    edu == "Bachelor's degree" ~ "Bachelor's degree",
    TRUE ~ "Less than Bachelor's degree"))
mkeps_part_all = merge(mkeps_grade_part, mkeps_part, by = "id")
mkeps_part_all


```
Now create Table 1 for MKEPS
```{r}
library(tableone)
tab1_mkeps =  CreateTableOne(data = mkeps_part_all[2:8])
tab1_mkeps = print(tab1_mkeps, showAllLevels = TRUE)
write.csv(tab1_mkeps, file = "tab1_mkeps.csv")
```
Evaluate differences Sara and Elaina 
```{r}
setwd("C:/Users/Matthew.Hanauer/Google Drive/Diss/Results/mkeps_main/graded/scored")
sara_elaina = read.csv("sara_elaina.csv", header = TRUE)
elaina_sara = read.csv("elaina_sara.csv", header = TRUE)
### Werid x variable remove
sara_elaina$X = NULL
elaina_sara_score =  elaina_sara[c(2,5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35, 38, 41, 44, 46)]
sara_elaina_score = sara_elaina[c(2,5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35, 38, 41, 44, 46)]

score_diff_sara_elaina = sara_elaina_score[1:15] - elaina_sara_score[1:15]
write.csv(score_diff_sara_elaina, "score_diff_sara_elaina.csv", row.names = FALSE)
### Identify the rows 

```
Evaluate differences Elaina and Matt 
```{r}
setwd("C:/Users/Matthew.Hanauer/Google Drive/Diss/Results/mkeps_main/graded/scored")
elaina_matt = read.csv("elaina_matt.csv", header = TRUE)
matt_elaina = read.csv("matt_elaina.csv", header = TRUE)
library(dplyr)
elaina_matt_score = elaina_matt %>%
  select(2,5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35, 38, 41, 44, 46) 

matt_elaina_score = matt_elaina %>%
  select(2,5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35, 38, 41, 44, 46) 

score_diff_elaina_matt = elaina_matt_score[,1:15] - matt_elaina_score[,1:15]
sum(is.na(score_diff_elaina_matt))
write.csv(score_diff_elaina_matt, "score_diff_elaina_matt.csv", row.names = FALSE)

```
Evaluate differences Sara and matt
```{r}
setwd("C:/Users/Matthew.Hanauer/Google Drive/Diss/Results/mkeps_main/graded/scored")
sara_matt = read.csv("sara_matt.csv", header = TRUE)
matt_sara = read.csv("matt_sara.csv", header = TRUE)
library(dplyr)
sara_matt_score = sara_matt %>%
  select(2,5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35, 38, 41, 44, 46) 

matt_sara_score = matt_sara %>%
  select(2,5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35, 38, 41, 44, 46) 

score_diff_sara_matt = sara_matt_score[,1:15] - matt_sara_score[,1:15]
sum(is.na(score_diff_sara_matt))
write.csv(score_diff_sara_matt, "score_diff_sara_matt.csv", row.names = FALSE)

```

